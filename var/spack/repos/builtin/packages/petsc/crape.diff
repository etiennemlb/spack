--- spack-src/config/BuildSystem/config/setCompilers.py	2024-08-29 14:52:04.889517604 +0200
+++ spack-src/config/BuildSystem/config/setCompilers.py.patched	2024-08-29 14:52:33.554153906 +0200
@@ -516,19 +516,19 @@
 
   @staticmethod
   def isCrayPEWrapper(compiler, log):
-    '''Returns true if the compiler is a Cray Programming Environment (PE) wrapper compiler'''
-    # Note with Cray module PrgEnv-gnu, cc is a Cray PE wrapper around gcc, but not a Cray compiler on its own.
+    '''Returns true if the compiler is a Cray Programming Environment (PE) wrapped compiler'''
+    # NOTE: details on this method in: https://github.com/spack/spack/pull/46086
     try:
-      (output, error, status) = config.base.Configure.executeShellCommand(compiler+' --help', log = log)
+      canary_value = '5dde31d2'
+      (output, error, status) = config.base.Configure.executeShellCommand(
+        f'CRAY_CPU_TARGET="{canary_value}" {compiler} --version',
+        checkCommand=config.base.Configure.passCheckCommand,
+        log=log,
+      )
       output = output + error
-      # On OLCF Spock, with PrgEnv-cray
-      #     $ cc --help |& grep "\-craype\-"
-      #     Use --craype-help for CrayPE specific options.
-      # with PrgEnv-gnu, the output is
-      #     -craype-verbose    Print the command which is forwarded
-      #     ...
-      if output.find('-craype-') >= 0:
-        if log: log.write('Detected Cray PE wrapper compiler\n')
+      if output.find(canary_value) >= 0:
+        if log:
+          log.write('Detected Cray PE compiler wrapper\n')
         return 1
     except RuntimeError:
       pass
